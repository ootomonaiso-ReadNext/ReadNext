name: ページ更新

# mainブランチへのプッシュがトリガー
on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    # Ubuntu環境で実行
    runs-on: ubuntu-latest

    steps:
      # リポジトリからコードをチェックアウト
    - name: Checkout code
      uses: actions/checkout@v3

      # Node.js ver.20.11.0をセットアップ
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.11.0'

      # プロジェクトのあるproディレクトリへ移動し、依存環境をインストール
    - name: Install dependencies
      run: |
        cd pro
        npm install

      # FirebaseとGemini APIの設定を.envファイルに注入
    - name: Inject Config
      run: |
        cd pro
        echo "REACT_APP_FIREBASE_API_KEY=${{ secrets.REACT_APP_FIREBASE_API_KEY }}" >> .env
        echo "REACT_APP_FIREBASE_AUTH_DOMAIN=${{ secrets.REACT_APP_FIREBASE_AUTH_DOMAIN }}" >> .env
        echo "REACT_APP_FIREBASE_PROJECT_ID=${{ secrets.REACT_APP_FIREBASE_PROJECT_ID }}" >> .env
        echo "REACT_APP_FIREBASE_STORAGE_BUCKET=${{ secrets.REACT_APP_FIREBASE_STORAGE_BUCKET }}" >> .env
        echo "REACT_APP_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.REACT_APP_FIREBASE_MESSAGING_SENDER_ID }}" >> .env
        echo "REACT_APP_FIREBASE_APP_ID=${{ secrets.REACT_APP_FIREBASE_APP_ID }}" >> .env
        echo "REACT_APP_FIREBASE_MEASUREMENT_ID=${{ secrets.REACT_APP_FIREBASE_MEASUREMENT_ID }}" >> .env
        echo "REACT_APP_GEMINI_API_KEY=${{ secrets.REACT_APP_GEMINI_API_KEY }}" >> .env

      # プロジェクトをビルド
    - name: Build the project
      run: |
        cd pro
        npm run build

      # Github Pagesにデプロイ
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: pro/build
